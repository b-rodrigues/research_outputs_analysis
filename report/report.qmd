---
title: "Luxembourg's Research Landscape: A Comprehensive Analysis of Scientific Publications"
---

```{r}
#| include: false
library(DT)
library(dplyr)
library(ggplot2)
library(rixpress)
library(tidyr)

# Load data
rxp_load("type_doi_missing")
rxp_load("lu_first_authors")
rxp_load("primary_domain_lu")
rxp_load("primary_subfield_lu")
rxp_load("languages")
rxp_load("citation_data_stats")
rxp_load("country_authors_unique")
```

```{ojs}
// echo: false
// Import required libraries
import {Plot} from "@observablehq/plot"
import {Inputs} from "@observablehq/inputs"
import {rangeInput} from "@mootari/range-slider@1846"
```


## Executive Summary

This report examines articles from the luxembourguish research landscape from
2015-2025. Using OpenAlex data, we analyze publication patterns, international
collaborations, and research impact across all major scientific domains.

The source code of this analysis can be found
[here](https://github.com/b-rodrigues/research_outputs_analysis).

## Introduction and Methodology

### Data Source and Scope

This analysis leverages OpenAlex, a comprehensive open-access scholarly metadata
platform that serves as a freely accessible alternative to proprietary academic
databases. OpenAlex provides structured information about publications, authors,
institutional affiliations, and research collaborations across all academic
disciplines, making it an ideal resource for national research landscape
analysis.

### Analytical Framework

Our methodology focuses on identifying scholarly works with Luxembourg
institutional affiliations over the past decade. The analysis employs a critical
distinction based on first authorship status:

- **Luxembourg-led research**: Publications where the first author is affiliated
  with a Luxembourg institution
- **Collaborative research**: Publications where Luxembourg institutions
  participate as co-authors but not as lead authors

This classification enables us to understand both Luxembourg's research
leadership capacity and its integration into international research networks.

### Data Quality Considerations

While OpenAlex's multi-source approach enhances coverage comprehensiveness, data
quality depends on source reporting accuracy and the platform's ability to
correctly identify Luxembourg-affiliated works. It sould also be noted that the
year 2025 is still ongoing and as such data for 2025 is obviously not complete,
but this may also be the case for data from 2024. OpenAlex needs time to
discover, process, and index publications. These considerations should be taken
into account when intepreting the finding from this report.

## Publication Portfolio Analysis

### Document Types and Coverage

The initial dataset encompasses all document types recorded in OpenAlex for
Luxembourg-affiliated scholarly works. The following table shows the
distribution of work types and the presence of Digital Object Identifiers (DOI:
a unique, persistent identifier assigned to digital publications that provide a
permanent web address linking directly to the original document, even if the
publisher's URL changes):

```{r}
#| echo: false
#| label: tbl-type-doi-missing
#| tbl-cap: Distribution of types of work and missingness of DOI

datatable(
  type_doi_missing,
  filter = list(position = 'top', clear = FALSE),
  options = list(
    pageLength = 15,
    scrollX = TRUE,
    dom = 'Bfrtip',
    buttons = c('excel')
  ),
  extensions = 'Buttons'
)
```

Given the substantial predominance of journal articles in the dataset and their
central importance in academic research communication, this analysis focuses
exclusively on peer-reviewed articles, with or without a DOI identifier.

### Research Leadership vs. Collaboration

From 2015 until 2023, research output kept increasing, regardless of the
affiliation of the primary author, as shown in the graph below. 2024 marked a
decrease in output for the first time, but itâ€™s too early to know if this
decrease will continue into 2025 and beyond. As explained in the introduction,
it is very well possible that scholarly works from 2024, and certainly from
2025, are not all indexed by OpenAlex yet.

```{r}
#| echo: false
ojs_define(lu_first_authors_ojs = lu_first_authors)
```

```{ojs}
//| echo: false

// Convert R data to JavaScript format
raw_lu_data = transpose(lu_first_authors_ojs)

lu_data = raw_lu_data.map(d => ({
  publication_year: +d.publication_year,  // Convert to number
  is_lu_first_author: d.is_lu_first_author === "TRUE" || d.is_lu_first_author === true,
  author_type: (d.is_lu_first_author === "TRUE" || d.is_lu_first_author === true) ? "LU first author" : "Non-LU first author",
  total: +d.total
}))

// Create color mapping
lu_colors = new Map([
  ["LU first author", "#003399"],
  ["Non-LU first author", "#FF6B35"]
])

// Get unique years for x-axis
unique_years_pub = [...new Set(lu_data.map(d => d.publication_year))].sort()

// Create the plot
Plot.plot({
  width: 800,
  height: 500,
  marginLeft: 60,
  marginBottom: 60,
  x: {
    label: "Publication Year",
    domain: d3.extent(lu_data, d => d.publication_year),
    tickFormat: "d",
    ticks: unique_years_pub
  },
  y: {
    label: "Number of Publications",
    grid: true
  },
  color: {
    domain: ["LU first author", "Non-LU first author"],
    range: ["#003399", "#FF6B35"],
    legend: true
  },
  marks: [
    // Lines for each author type
    Plot.line(lu_data, {
      x: "publication_year",
      y: "total",
      stroke: "author_type",
      strokeWidth: 2.5,
      z: "author_type"
    }),
    // Points for each author type
    Plot.dot(lu_data, {
      x: "publication_year",
      y: "total",
      fill: "author_type",
      r: 4,
      stroke: "white",
      strokeWidth: 1
    }),
    // Vertical line rule with tooltip
    Plot.ruleX(lu_data, Plot.pointerX({
      x: "publication_year",
      stroke: "gray",
      strokeWidth: 1.5,
      strokeDasharray: "3,3",
      opacity: 0.8
    })),
    // Enhanced tooltip showing both values at each year
    Plot.tip(lu_data, Plot.pointerX({
      x: "publication_year",
      title: (d, i, data) => {
        // Get the year from the hovered point
        const year = d.publication_year;
        
        // Find all data points for this year
        const yearData = data.filter(point => point.publication_year === year);
        
        // Create tooltip text
        const luFirst = yearData.find(p => p.author_type === "LU first author")?.total || 0;
        const nonLuFirst = yearData.find(p => p.author_type === "Non-LU first author")?.total || 0;
        
        return `Year: ${year}\n${'-'.repeat(25)}\nLU first author: ${luFirst}\nNon-LU first author: ${nonLuFirst}`;
      },
      fontSize: 12
    }))
  ],
  title: "Luxembourg Research Publications by First Author Affiliation"
})
```

```{r}
#| eval: false
#| include: false
#| label: tbl-lu-first-authors
#| tbl-cap: Number of articles where the first author is LU-affiliated

lu_first_authors <- lu_first_authors %>%
  pivot_wider(names_from = is_lu_first_author, values_from = total) %>%
  rename(
  `Publication Year` = publication_year,
  `Non-LU first author` = `FALSE`,
  `LU first author` = `TRUE`
  ) %>%
  mutate(`Publication Year` = as.integer(`Publication Year`))

datatable(
  lu_first_authors,
  filter = list(position = 'top', clear = FALSE),
  options = list(
    pageLength = 10,
    scrollX = TRUE,
    dom = 'Bfrtip',
    buttons = c('excel'),
    order = list(list(0, 'desc'))
  ),
  extensions = 'Buttons'
) %>%
  formatStyle(columns = colnames(.), fontsize = '12px')
```

## Research Domain Landscape

### Major Scientific Domains

In aggregate, most works are led by LU-affiliated researchers, but this pattern
reverses depending on the domain. The interactive visualization below tracks
publication volumes across domains over time (you can interact with the graph
below by selecting domains or affiliation of the first author):

```{r}
#| include: false
#| fig-height: 6
#| fig-width: 12

domain_colors <- c(
  # Add your actual domain names here with distinctive colors
  "Health Sciences" = "#FF6B35",        # Orange-red
  "Life Sciences" = "#003399",      # Deep blue
  "MISSING-DOMAIN" = "#228B22",   # Forest green
  "Physical Sciences" = "#FF1493",  # Deep pink
  "Social Sciences" = "#800080"    # Purple
)

primary_domain_lu %>%
  mutate(is_lu_first_author = ifelse(is_lu_first_author, "LU-affiliated first author", "Non LU-affiliated first author")) %>%  
  ggplot(aes(
    x = publication_year,
    y = total, 
    color = primary_domain_name,
    group = primary_domain_name,
  )) +
  geom_line(linewidth = 1.2, alpha = 0.8) +
  geom_point(size = 2, alpha = 0.9) +
  scale_color_manual(values = domain_colors) +
  facet_wrap(
    ~is_lu_first_author,
    labeller = labeller(
      is_lu_first_author = c(
        "LU-affiliated first author" = "LU-affiliated first author",
        "Non LU-affiliated first author" = "Non LU-affiliated first author"
      )
    )
  ) +
  labs(
    title = "Luxembourg Research Publications by Domain Over Time",
    subtitle = "Faceted by Luxembourg First Author Status",
    x = "Publication Year",
    y = "Number of Publications",
    color = "Research Domain"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10),
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    legend.position = "bottom",
    legend.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold", size = 11),
    strip.background = element_rect(fill = "lightgray", color = "black"),
    axis.title = element_text(size = 12),
    panel.grid.major = element_line(color = "lightgray", linewidth = 0.3),
    panel.grid.minor = element_blank()
  ) +
  # Adjust legend to show in multiple rows if needed
  guides(color = guide_legend(nrow = 2, byrow = TRUE))

```

```{r}
#| echo: false
ojs_define(primary_domain_lu_ojs = primary_domain_lu)
```


```{ojs}
// echo: false

// Convert R data to JavaScript format
raw_data = transpose(primary_domain_lu_ojs)

// Convert data types to ensure Observable Plot can use them
data = raw_data.map(d => ({
  publication_year: +d.publication_year,  // Convert to number
  primary_domain_name: d.primary_domain_name,
  total: +d.total,  // Convert to number
  is_lu_first_author: d.is_lu_first_author === "TRUE" || d.is_lu_first_author === true  // Convert to boolean
}))

// Create color mapping
domain_colors = new Map([
  ["Health Sciences", "#FF6B35"],
  ["Life Sciences", "#003399"],
  ["MISSING-DOMAIN", "#228B22"],
  ["Physical Sciences", "#FF1493"],
  ["Social Sciences", "#800080"]
])

// Get unique values for controls
unique_domains = [...new Set(data.map(d => d.primary_domain_name))].sort()

html`<div style="margin-top: 20px; padding: 15px;">
  <h4 style="margin-top: 0; margin-bottom: 15px;">Inputs:</h4>
  <label style="font-size: 16px; color: #333;">Select year range:</label>
</div>`
viewof year_range = rangeInput({
  min: 2015,
  max: 2025,
  value: [2015, 2025],
  step: 1
})

viewof selected_domains = Inputs.checkbox(
  unique_domains,
  {
    value: ["Health Sciences"],
    label: "Research Domains"
  }
)

viewof selected_author_type = Inputs.radio(
  ["LU-affiliated first author", "Non LU-affiliated first author", "Both"],
  {
    value: "Both",
    label: "First Author Affiliation"
  }
)


// Filter data based on selections
filtered_data = data.filter(d => {
  // Year filter
  const yearOk = d.publication_year >= year_range[0] && d.publication_year <= year_range[1];
  
  // Domain filter
  const domainOk = selected_domains.includes(d.primary_domain_name);
  
  // Author filter
  let authorOk = false;
  if (selected_author_type === "Both") {
    authorOk = true;
  } else if (selected_author_type === "LU-affiliated first author") {
    authorOk = d.is_lu_first_author === true;
  } else if (selected_author_type === "Non LU-affiliated first author") {
    authorOk = d.is_lu_first_author === false;
  }
  
  return yearOk && domainOk && authorOk;
})

// Combined HTML legend with domain colors and author types
html`
<div style="margin-top: 20px; padding: 15px;">
  <h4 style="margin-top: 0; margin-bottom: 15px;">Legend:</h4>
  
  <!-- Domain Colors -->
  <div style="margin-bottom: 15px;">
    <h5 style="margin: 0 0 10px 0;">Research Domains:</h5>
    <div style="display: flex; flex-wrap: wrap; gap: 15px;">
      ${unique_domains.map(domain => `
        <div style="display: flex; align-items: center; gap: 6px;">
          <div style="width: 16px; height: 16px; background-color: ${domain_colors.get(domain)}; border-radius: 2px;"></div>
          <span style="font-size: 14px;">${domain}</span>
        </div>
      `).join('')}
    </div>
  </div>
  
  <!-- Author Types -->
  <div>
    <h5 style="margin: 0 0 10px 0;">Author Types:</h5>
    <div style="display: flex; gap: 30px; align-items: center; flex-wrap: wrap;">
      <div style="display: flex; align-items: center; gap: 8px;">
        <svg width="30" height="20">
          <line x1="0" y1="10" x2="30" y2="10" stroke="#333" stroke-width="2.5" />
          <circle cx="15" cy="10" r="4" fill="#333" stroke="white" stroke-width="1"/>
        </svg>
        <span><strong>LU-affiliated first author</strong> (solid line + circle)</span>
      </div>
      <div style="display: flex; align-items: center; gap: 8px;">
        <svg width="30" height="20">
          <line x1="0" y1="10" x2="30" y2="10" stroke="#333" stroke-width="2.5" stroke-dasharray="8,8"/>
          <polygon points="15,6 19,14 11,14" fill="#333" stroke="white" stroke-width="1"/>
        </svg>
        <span><strong>Non-LU-affiliated first author</strong> (dashed line + triangle)</span>
      </div>
    </div>
  </div>
</div>
`

// Create the plot with dynamic x-axis based on filtered data
//| echo: false

// Create the plot with integer-only year ticks
Plot.plot({
  width: 800,
  height: 500,
  marginLeft: 60,
  marginBottom: 60,
  x: {
    label: "Publication Year",
    domain: [Math.min(...filtered_data.map(d => d.publication_year)), 
             Math.max(...filtered_data.map(d => d.publication_year))],
    tickFormat: "d",
    ticks: d3.range(
      Math.min(...filtered_data.map(d => d.publication_year)),
      Math.max(...filtered_data.map(d => d.publication_year)) + 1
    ) // Force integer ticks only
  },
  y: {
    label: "Number of Publications",
    grid: true
  },
  color: {
    domain: unique_domains,
    range: unique_domains.map(d => domain_colors.get(d)),
    legend: false
  },
  marks: [
    // Your existing marks here...
    // Solid lines for LU-affiliated authors
    Plot.line(filtered_data.filter(d => d.is_lu_first_author === true), {
      x: "publication_year",
      y: "total",
      stroke: "primary_domain_name",
      strokeWidth: 2.5,
      z: d => `${d.primary_domain_name}-LU`
    }),
    // Dashed lines for non-LU-affiliated authors
    Plot.line(filtered_data.filter(d => d.is_lu_first_author === false), {
      x: "publication_year",
      y: "total",
      stroke: "primary_domain_name",
      strokeWidth: 2.5,
      strokeDasharray: "8,8",
      z: d => `${d.primary_domain_name}-NonLU`
    }),
    // Points with different symbols
    Plot.dot(filtered_data, {
      x: "publication_year",
      y: "total",
      fill: "primary_domain_name",
      symbol: d => d.is_lu_first_author ? "circle" : "triangle",
      r: 5,
      stroke: "white",
      strokeWidth: 1
    }),
    // Vertical line rule (only when "Both" is selected)
    ...(selected_author_type === "Both" ? [
      Plot.ruleX(filtered_data, Plot.pointerX({
        x: "publication_year",
        stroke: "gray",
        strokeWidth: 1,
        strokeDasharray: "3,3",
        opacity: 0.7
      }))
    ] : []),
    // Enhanced tooltips
Plot.tip(filtered_data, selected_author_type === "Both" ? 
  Plot.pointerX({
    x: "publication_year",
    title: (d, i, data) => {
      // Group all data points by year for this x-position
      const year = d.publication_year;
      const allPointsAtYear = data.filter(point => point.publication_year === year);
      
      // Create title showing all domains and their values at this year
      const yearTitle = `Year: ${year}\n${'-'.repeat(20)}\n`;
      const entries = allPointsAtYear.map(point => 
        `${point.primary_domain_name}: ${point.total} (${point.is_lu_first_author ? 'LU' : 'Non-LU'})`
      ).join('\n');
      
      return yearTitle + entries;
    },
    fontSize: 12
  }) : 
  Plot.pointer({
    x: "publication_year",
    y: "total",
    fill: "primary_domain_name",
    title: d => `${d.primary_domain_name}\n${d.publication_year}\nPublications: ${d.total}\nLU First Author: ${d.is_lu_first_author ? "Yes" : "No"}`
  })
)
  ],
  title: "Luxembourg Research Publications by Domain Over Time"
})

```

For the Life and Health sciences, luxembourguish researchers are more often
collaborators, while they are more often leads in the Physical or Social
sciences.

### Research Specialization Areas

Beyond broad domains, OpenAlex provides granular classification through research
subfields. There are over 200 distinct subfields available, so the graph below
focuses on the ten most prominent subfields in Luxembourg's research portfolio
by affilation of the first author (which results in 13 unique subfields):

```{r}
#| echo: false
ojs_define(primary_subfield_lu_ojs = primary_subfield_lu)
```

```{ojs}
//| echo: false

// Convert R data to JavaScript format
raw_data_subfield = transpose(primary_subfield_lu_ojs)

// Convert data types to ensure Observable Plot can use them
data_subfield = raw_data_subfield.map(d => ({
  publication_year: +d.publication_year,  // Convert to number
  primary_subfield_name: d.primary_subfield_name,
  total: +d.total,  // Convert to number
  is_lu_first_author: d.is_lu_first_author === "TRUE" || d.is_lu_first_author === true  // Convert to boolean
}))

// Create color mapping for your actual subfields
subfield_colors = new Map([
  ["Aerospace Engineering", "#FF6B35"],           // Orange-red
  ["Artificial Intelligence", "#003399"],        // Deep blue
  ["Computer Networks and Communications", "#228B22"], // Forest green
  ["Computer Vision and Pattern Recognition", "#FF1493"], // Deep pink
  ["Economics and Econometrics", "#800080"],     // Purple
  ["Electrical and Electronic Engineering", "#FFD700"], // Gold
  ["Information Systems", "#DE2910"],            // Red
  ["Materials Chemistry", "#C8102E"],            // Crimson
  ["Molecular Biology", "#009246"],              // Green
  ["Neurology", "#AA151B"],                      // Dark red
  ["Political Science and International Relations", "#FF7F00"], // Orange
  ["Pulmonary and Respiratory Medicine", "#4B0082"], // Indigo
  ["Sociology and Political Science", "#8B4513"] // Saddle brown
])

// Get unique values for controls
unique_subfields = [...new Set(data_subfield.map(d => d.primary_subfield_name))].sort()

html`<div style="margin-top: 20px; padding: 15px;">
  <h4 style="margin-top: 0; margin-bottom: 15px;">Inputs:</h4>
  <label style="font-size: 16px; color: #333;">Select year range:</label>
</div>`

viewof year_range_subfield = rangeInput({
  min: 2015,
  max: 2025,
  value: [2015, 2025],
  step: 1
})

viewof selected_subfields = Inputs.checkbox(
  unique_subfields,
  {
    value: ["Artificial Intelligence", "Computer Vision and Pattern Recognition", "Neurology"],
    label: "Research Subfields"
  }
)

viewof selected_author_type_subfield = Inputs.radio(
  ["LU-affiliated first author", "Non LU-affiliated first author", "Both"],
  {
    value: "Both",
    label: "First Author Affiliation"
  }
)

// Filter data based on selections
filtered_data_subfield = data_subfield.filter(d => {
  // Year filter
  const yearOk = d.publication_year >= year_range_subfield[0] && d.publication_year <= year_range_subfield[1];
  
  // Subfield filter
  const subfieldOk = selected_subfields.includes(d.primary_subfield_name);
  
  // Author filter
  let authorOk = false;
  if (selected_author_type_subfield === "Both") {
    authorOk = true;
  } else if (selected_author_type_subfield === "LU-affiliated first author") {
    authorOk = d.is_lu_first_author === true;
  } else if (selected_author_type_subfield === "Non LU-affiliated first author") {
    authorOk = d.is_lu_first_author === false;
  }
  
  return yearOk && subfieldOk && authorOk;
})

// Combined HTML legend with subfield colors and author types
html`
<div style="margin-top: 20px; padding: 15px;">
  <h4 style="margin-top: 0; margin-bottom: 15px;">Legend:</h4>
  
  <!-- Subfield Colors -->
  <div style="margin-bottom: 15px;">
    <h5 style="margin: 0 0 10px 0;">Research Subfields:</h5>
    <div style="display: flex; flex-wrap: wrap; gap: 15px;">
      ${unique_subfields.map(subfield => `
        <div style="display: flex; align-items: center; gap: 6px;">
          <div style="width: 16px; height: 16px; background-color: ${subfield_colors.get(subfield) || '#888'}; border-radius: 2px;"></div>
          <span style="font-size: 14px;">${subfield}</span>
        </div>
      `).join('')}
    </div>
  </div>
  
  <!-- Author Types -->
  <div>
    <h5 style="margin: 0 0 10px 0;">Author Types:</h5>
    <div style="display: flex; gap: 30px; align-items: center; flex-wrap: wrap;">
      <div style="display: flex; align-items: center; gap: 8px;">
        <svg width="30" height="20">
          <line x1="0" y1="10" x2="30" y2="10" stroke="#333" stroke-width="2.5" />
          <circle cx="15" cy="10" r="4" fill="#333" stroke="white" stroke-width="1"/>
        </svg>
        <span><strong>LU-affiliated first author</strong> (solid line + circle)</span>
      </div>
      <div style="display: flex; align-items: center; gap: 8px;">
        <svg width="30" height="20">
          <line x1="0" y1="10" x2="30" y2="10" stroke="#333" stroke-width="2.5" stroke-dasharray="8,8"/>
          <polygon points="15,6 19,14 11,14" fill="#333" stroke="white" stroke-width="1"/>
        </svg>
        <span><strong>Non-LU-affiliated first author</strong> (dashed line + triangle)</span>
      </div>
    </div>
  </div>
</div>
`

// Create the plot with integer-only year ticks
Plot.plot({
  width: 800,
  height: 500,
  marginLeft: 60,
  marginBottom: 60,
  x: {
    label: "Publication Year",
    domain: [Math.min(...filtered_data_subfield.map(d => d.publication_year)), 
               Math.max(...filtered_data_subfield.map(d => d.publication_year))],
    tickFormat: "d",
    ticks: d3.range(
      Math.min(...filtered_data_subfield.map(d => d.publication_year)),
      Math.max(...filtered_data_subfield.map(d => d.publication_year)) + 1
    )
  },
  y: {
    label: "Number of Publications",
    grid: true
  },
  color: {
    domain: unique_subfields,
    range: unique_subfields.map(d => subfield_colors.get(d) || '#888'),
    legend: false
  },
  marks: [
    // Solid lines for LU-affiliated authors
    Plot.line(filtered_data_subfield.filter(d => d.is_lu_first_author === true), {
      x: "publication_year",
      y: "total",
      stroke: "primary_subfield_name",
      strokeWidth: 2.5,
      z: d => `${d.primary_subfield_name}-LU`
    }),
    // Dashed lines for non-LU-affiliated authors
    Plot.line(filtered_data_subfield.filter(d => d.is_lu_first_author === false), {
      x: "publication_year",
      y: "total",
      stroke: "primary_subfield_name",
      strokeWidth: 2.5,
      strokeDasharray: "8,8",
      z: d => `${d.primary_subfield_name}-NonLU`
    }),
    // Points with different symbols
    Plot.dot(filtered_data_subfield, {
      x: "publication_year",
      y: "total",
      fill: "primary_subfield_name",
      symbol: d => d.is_lu_first_author ? "circle" : "triangle",
      r: 5,
      stroke: "white",
      strokeWidth: 1
    }),
    // Vertical line rule (only when "Both" is selected)
    ...(selected_author_type_subfield === "Both" ? [
      Plot.ruleX(filtered_data_subfield, Plot.pointerX({
        x: "publication_year",
        stroke: "gray",
        strokeWidth: 1,
        strokeDasharray: "3,3",
        opacity: 0.7
      }))
    ] : []),
    // Enhanced tooltips
        Plot.tip(filtered_data_subfield, selected_author_type_subfield === "Both" ? 
      Plot.pointerX({
        x: "publication_year",
        title: (d, i, data) => {
          // Group all data points by year for this x-position
          const year = d.publication_year;
          const allPointsAtYear = data.filter(point => point.publication_year === year);
          // Create title showing all subfields and their values at this year
          const yearTitle = `Year: ${year}\n${'-'.repeat(20)}\n`;
          const entries = allPointsAtYear.map(point => 
            `${point.primary_subfield_name}: ${point.total} (${point.is_lu_first_author ? 'LU' : 'Non-LU'})`
          ).join('\n');
          return yearTitle + entries;
        },
        fontSize: 12
      }) : 
      Plot.pointer({
        x: "publication_year",
        y: "total",
        fill: "primary_subfield_name",
        title: d => `${d.primary_subfield_name}\n${d.publication_year}\nPublications: ${d.total}\nLU First Author: ${d.is_lu_first_author ? "Yes" : "No"}`
      })
    )
  ],
  title: "Luxembourg Research Publications by Subfield Over Time"
})

```

The subfields that generate the most publications are artificial intelligence,
aerospace engineering and political science and international relations,
especially over the last 5 years.

Most of the other subfields seem to be stable, but Economics and Econometrics,
as well as Information Systems, show a decreasing trend over the last 5 years,
but only for LU-affiliated lead authors.

## Global Research Partnerships

### International Collaboration Network

Luxembourg's research ecosystem is characterized by extensive international
collaboration. This section examines the geographical distribution of research
partnerships, revealing the countries and regions most frequently collaborating
with Luxembourg institutions. The visualization below provides interactive
exploration of Luxembourg's collaboration patterns and counts the total number of author-country affiliations rather than unique publications, meaning that a single paper with authors from multiple countries contributes to the count for each respective country. For example, if one publication has ten authors from ten different countries, it would be counted ten times across those countries, reflecting the collaborative nature of international research partnerships.

```{r}
#| include: false
#| warning: false
#| fig-height: 14
#| fig-width: 12

country_colors <- c(
  "European Union" = "#003399", # Deep blue (EU flag)
  "Others" = "#FF1493", # Deep pink
  "Luxembourg" = "#FF6B35", # Orange-red
  "France" = "#800080", # Purple
  "USA" = "#228B22", # Forest green
  "Belgium" = "#FFD700", # Gold
  "Germany" = "#000000", # Black
  "China" = "#DE2910", # Red
  "Great Britain" = "#C8102E", # British red (Union Jack)
  "Italy" = "#009246", # Italian green (flag)
  "Spain" = "#AA151B", # Spanish red (flag)
  "Switzerland" = "#FF0000", # Swiss red (flag)
  "Netherlands" = "#FF7F00"  # Dutch orange (national color)
)

# Plot for publication with co-authors
ggplot(country_authors_unique, aes(x = publication_year, y = n, fill = country_groups)) +
  geom_col(position = "dodge", color = "black", size = 0.5) + # Dodge bars for multiple countries per year
  scale_fill_manual(values = country_colors) +
  facet_wrap(
    ~is_lu_first_author,
    ncol = 1,
    labeller = labeller(
      is_lu_first_author = c(
        "FALSE" = "LU Not First Author",
        "TRUE" = "LU First Author"
      )
    )
  ) +
  labs(
    title = "Publications by Country/Region Over Time",
    subtitle = "Faceted by Luxembourg First Author Status",
    x = "Publication Year",
    y = "Total Publications",
    fill = "Country/Region"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10),
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    legend.position = "bottom",
    legend.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold", size = 11),
    strip.background = element_rect(fill = "lightgray", color = "black")
  ) +
  # Adjust legend to show in multiple rows if needed
  guides(fill = guide_legend(nrow = 2, byrow = TRUE))
```


```{r}
#| echo: false
ojs_define(country_authors_unique_ojs = country_authors_unique)
```

```{ojs}
//| echo: false

// Convert R data to JavaScript format
raw_country_data = transpose(country_authors_unique_ojs)

// Convert data types to ensure Observable Plot can use them
country_data = raw_country_data.map(d => ({
  publication_year: +d.publication_year,
  is_lu_first_author: d.is_lu_first_author === "TRUE" || d.is_lu_first_author === true,
  country_groups: d.country_groups,
  n: +d.n
}))

// Create color mapping for countries
country_colors = new Map([
  ["European Union", "#003399"],
  ["Others", "#FF1493"],
  ["Luxembourg", "#FF6B35"],
  ["France", "#800080"],
  ["USA", "#228B22"],
  ["Belgium", "#FFD700"],
  ["Germany", "#000000"],
  ["China", "#DE2910"],
  ["Great Britain", "#C8102E"],
  ["Italy", "#009246"],
  ["Spain", "#AA151B"],
  ["Switzerland", "#FF0000"],
  ["Netherlands", "#FF7F00"]
])

// Get unique values for controls
unique_years = [...new Set(country_data.map(d => d.publication_year))].sort()
unique_countries = [...new Set(country_data.map(d => d.country_groups))].sort()

html`<div style="margin-top: 20px; padding: 15px;">
  <h4 style="margin-top: 0; margin-bottom: 15px;">Inputs:</h4>
  <label style="font-size: 16px; color: #333;">Select year range:</label>
</div>`

viewof country_year_range = rangeInput({
  min: 2015,
  max: 2025,
  value: [2022, 2025],
  step: 1
})

viewof selected_countries = Inputs.checkbox(
  unique_countries,
  {
    value: unique_countries,
    label: "Countries/Regions"
  }
)

viewof country_author_type = Inputs.radio(
  ["LU-affiliated first author", "Non LU-affiliated first author", "Both"],
  {
    value: "Both",
    label: "First Author Affiliation"
  }
)

// Filter data based on selections
filtered_country_data = country_data.filter(d => {
  // Year filter
  const yearOk = d.publication_year >= country_year_range[0] && d.publication_year <= country_year_range[1];
  
  // Country filter
  const countryOk = selected_countries.includes(d.country_groups);
  
  // Author filter
  let authorOk = false;
  if (country_author_type === "Both") {
    authorOk = true;
  } else if (country_author_type === "LU-affiliated first author") {
    authorOk = d.is_lu_first_author === true;
  } else if (country_author_type === "Non LU-affiliated first author") {
    authorOk = d.is_lu_first_author === false;
  }
  
  return yearOk && countryOk && authorOk;
})

// Get years present in filtered data for x-axis
years_present = [...new Set(filtered_country_data.map(d => d.publication_year))].sort()

// Legend for countries
html`
<div style="margin-top: 20px; padding: 15px;">
  <h4 style="margin-top: 0; margin-bottom: 15px;">Legend:</h4>
  
  <div style="margin-bottom: 15px;">
    <h5 style="margin: 0 0 10px 0;">Countries/Regions:</h5>
    <div style="display: flex; flex-wrap: wrap; gap: 15px;">
      ${unique_countries.map(country => `
        <div style="display: flex; align-items: center; gap: 6px;">
          <div style="width: 16px; height: 16px; background-color: ${country_colors.get(country)}; border: 1px solid black; border-radius: 2px;"></div>
          <span style="font-size: 14px;">${country}</span>
        </div>
      `).join('')}
    </div>
  </div>
</div>
`

// Create faceted grouped bar chart - using fx for grouping and fy for LU status
Plot.plot({
  width: 900,
  height: 600,
  marginLeft: 80,
  marginBottom: 80,
  marginRight: 40,
  x: {
    label: null,
    axis: null,
    paddingOuter: 0.2
  },
  y: {
    label: "Total Affiliations",
    grid: true
  },
  fx: {
    label: "Publication Year",
    tickFormat: "d"
  },
  fy: {
    label: null,
    tickFormat: d => d ? "LU First Author" : "LU Not First Author"
  },
  color: {
    domain: unique_countries,
    range: unique_countries.map(d => country_colors.get(d)),
    legend: false
  },
  facet: {
    data: filtered_country_data,
    x: "publication_year",
    y: "is_lu_first_author",
    marginTop: 40
  },
  marks: [
    Plot.barY(filtered_country_data, Plot.groupX(
      {y: "sum"}, 
      {
        x: "country_groups",
        y: "n",
        fill: "country_groups",
        stroke: "black",
        strokeWidth: 0.5,
        tip: true,
        title: d => `${d.country_groups}\n${d.publication_year}\nPublications: ${d.n}\nLU First Author: ${d.is_lu_first_author ? "Yes" : "No"}`
      }
    )),
    Plot.frame({stroke: "black", strokeWidth: 1})
  ],
  style: {
    fontSize: "12px"
  },
  title: "Author Affiliations by Country/Region Over Time (Faceted by Luxembourg First Author Status)"
})

```

Collaboration pattern shows strong partnerships with European Union countries,
Germany and France. The USA is fourth, and then Belgium, with relatively modest
contributions from other regions like China and Switzerland, regardless of first
author affiliation.

## Research Impact Analysis

### Citation Patterns and Academic Influence

Research impact assessment requires understanding citation patterns across
different domains, publication years, and authorship types. The following table
presents comprehensive citation statistics:

```{r}
#| echo: false
#| label: tbl-citation
#| tbl-cap: Citation statistics

citation_stats <- citation_data_stats %>%
  mutate(publication_year = as.integer(publication_year), .before = everything()) %>%
  rename(
    `Publication year` = "publication_year",
    `Primary domain name` = "primary_domain_name",
    `First author affiliation` = "is_lu_first_author",
    `25% quantile` = "q_25",
    `Median` = "median",
    `75% quantile` = "q_75",
    `95% quantile` = "q_95",
    `99% quantile` = "q_99",
    `Maximum` = "max"
  )

datatable(
  citation_stats,
  caption = "Citation statistics",
  filter = list(position = 'top', clear = FALSE),
  options = list(
    pageLength = 15,
    scrollX = TRUE,
    dom = 'Bfrtip',
    buttons = c('excel')
  ),
  extensions = 'Buttons'
)
```

### Understanding Citation Dynamics

Citation patterns consistently follow power-law distributions across all
disciplines, publication years, and authorship types. This universal pattern
reflects the fundamental nature of scientific communication, where most articles
receive relatively few citations while a small percentage achieve high impact.

The analysis reveals several key insights about Luxembourg's research impact
patterns. Citation accumulation shows clear time dependency, with recent
publications naturally having lower citation counts while older works benefit
from extended accumulation periods. Different scientific domains exhibit
distinct citation cultures and timelines, affecting overall impact metrics.
Luxembourg researchers benefit significantly from international partnerships,
with higher citation rates for collaborative works where Luxembourg institutions
serve as co-authors rather than lead authors. This pattern suggests that
international collaborations often address research questions with broader
global relevance and appeal to wider scientific audiences, potentially due to
combined expertise and diverse perspectives from multi-national teams.
Additionally, lead institutions in these collaborations may have greater
resources for research dissemination and promotion.

As an example, letâ€™s take a closer look at the Health Sciences domain. For
Luxembourg-affiliated first authors in 2024, 75% of articles received two or
fewer citations, while only 1% achieved 16 or more citations. However, for works
published in 2019 which had more time to accumulate citations, publications by
Luxembourg-affiliated lead authors showed 75% of articles receiving 18 or fewer
citations and 1% achieving 147 or more citations. The peak impact demonstrates
the substantial difference between lead and collaborative authorship roles, with
the highest-cited single article achieving 482 citations for
Luxembourg-affiliated authors but 3,331 citations for non-Luxembourg-affiliated
authors in collaborative works.

## Scientific Communication Patterns

### Language Usage in Research Publications

As expected, English dominates scientific communication across all research
domains:

```{r}
#| echo: false
#| label: tbl-languages
#| tbl-cap: Distribution of languages used to write articles

languages <- languages %>%
  mutate(publication_year = as.integer(publication_year), .before = everything()) %>%
  rename(
        `Publication year` = "publication_year",
        `Primary domain name` = "primary_domain_name",
        `First author affiliation` = "is_lu_first_author"
      )

datatable(
  languages,
  caption = "Distribution of languages used to write articles",
  filter = list(position = 'top', clear = FALSE),
  options = list(
    pageLength = 15,
    scrollX = TRUE,
    dom = 'Bfrtip',
    buttons = c('excel')
  ),
  extensions = 'Buttons'
)
```

This linguistic pattern reflects the international nature of scientific
communication and Luxembourg's integration into global research networks. The
predominance of English facilitates international collaboration and maximizes
research visibility and accessibility.

## Conclusions and Future Directions

This comprehensive analysis of Luxembourg's research landscape reveals several
key characteristics that define the country's position in the global scientific
community. Luxembourg maintains active research programs across multiple
scientific domains, with particular strength in physical and social sciences,
demonstrating a balanced research portfolio that spans diverse areas of inquiry.
The country's research ecosystem demonstrates extensive international
collaboration, particularly with European partners, reflecting Luxembourg's
strategic position within the European research infrastructure and its
commitment to cross-border scientific cooperation.

To effectively monitor Luxembourg's research performance and strategic
positioning, several key performance indicators should be tracked annually:
publication volume trends by domain and institutional affiliation, international
collaboration rates and geographic distribution of partnerships, citation impact
metrics across different time horizons, the proportion of Luxembourg-led versus
collaborative research projects, language diversity in publications, and the
emergence of new research specializations or declining areas. Additionally,
monitoring the ratio of publications with Luxembourg first authors versus those
where Luxembourg institutions serve as collaborative partners would provide
insights into the country's research leadership capacity versus its integration
into international networks. However, it is equally important to expand this
monitoring framework beyond traditional academic articles to include datasets
produced, software developed, patents filed, policy reports, and other forms of
research communication and knowledge transfer, as these outputs increasingly
represent critical components of modern research impact and innovation
ecosystems. Regular assessment of these comprehensive metrics would enable
evidence-based research policy decisions and help identify opportunities for
strategic investment in emerging or underperforming research areas.

Once the national publication registry will be established, this analysis could
also become exhaustive, especially if integration with other sources such as
OpenAlex is achieved, which would allow for international comparisons and more
complete coverage of Luxembourg's diverse research outputs across all
communication channels and impact pathways.
